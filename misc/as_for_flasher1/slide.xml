<slide><![CDATA[

閲覧方法

:→, SPACE：:次のページへ
:←, Shift+SPACE：:前のページへ

----

*ActionScript<br>for<br>Flasher (1)

----

**自己紹介

----

にとよん と申します

----

「てっく煮」というサイトをやってます
><center><img src="images/techni.jpg" width="817" height="605"></center><

<span class="small">Flash関連の話題多数！</span>

----

***代表作 <img src="http://b.hatena.ne.jp/entry/image/large/http://tech.nitoyon.com/javascript/application/racing/1/">
><center><img src="images/gmap.gif"></center><

----

「アイデア」を
楽しんでもらった作品

----

slashdot.jp で<a href="http://slashdot.jp/askslashdot/article.pl?sid=05/11/15/2313231">取り上げられた</a>

----

動ナビで<a href="http://search.blognavi.info/news/entry/20060312/15093/index.html">取り上げられた</a>

----

本職はプログラマですが
たまに Flash も触ります

----

***作品例

花びらが時を刻む梅時計

----

><center><flash src="images/clock.swf" width="280" height="270"></center><

-<span class="small">上段が時間、中段が分、下段が秒</span>
-<span class="small">左端の枚数が十の位、真ん中と右端の花びらを足した枚数が一の位</span>

----

そうそう、
昨日は東京で勉強会でした

----

-<a href="http://www.fladdict.net/blog/">fladdict</a> さん
-<a href="http://www.be-interactive.org/">Be Interactive</a>のyossyさん
-Progressionの<a href="http://blog.nium.jp/">taka:nium</a> さん
-WCANの<a href="http://un-q.net/">ll_koba_ll</a> さん
と初めて会って

----

リアル版、Flash 談義を<br>してきましたよー

----

-<span class="small">関連：<a href="http://d.hatena.ne.jp/amachang/20070519/1179592450">勉強会を開催しました。</a><br>(IT戦記 by id:amachang)</span>
-<span class="small">関連：<a href="http://d.hatena.ne.jp/nitoyon/20070510/flash_on_twitter">すごく楽しかった Flash 談義のログをまとめてみたよ</a> (てっく煮ブログ)</span>

----

**本題

----

タイムライン
vs
ActionScript

----

みんなどっちで<br>作っているのだろう

----

***タイムライン

----

パブリッシュしなくても<br>プレビューできる

----

パブリッシュしたらプレビュー<br>した通りに出力される

----

***ActionScript

----

凝ったアニメーションが作れる

----

でもパブリッシュしないと
どう動くかわからない

----

**ケーススタディ

----

**具体例

「キャンペーン中」と表示する<br>バナーを作る

----

***方法１：力任せ

タイムラインのみ

----

文字列を分解して、
><center><img src="images/brute_force1.jpg" width="754" height="621"></center><

----

トゥイーンでアニメーション
><center><img src="images/brute_force2.jpg" width="752" height="535"></center><

----

トゥイーンでアニメーション
><center><img src="images/brute_force3.jpg" width="752" height="535"></center><

----

途中経過
><center><flash src="images/brute_force1.swf" width="550" height="200"></center><

----

開始時間をずらす
><center><img src="images/brute_force4.jpg" width="752" height="535"></center><

----

ひとまず完成
><center><flash src="images/brute_force2.swf" width="550" height="200"></center><

----

でも
----
-色を変えてよ
----
-エフェクトをもっと凝ってよ
----
-フォント変えてよ
----
といった要望に対応できん

----

頑張ればできるけど<br>めんどくさい
----
そこで

----

***方法２：<br>エフェクトのMC化

----

アニメーションのエフェクトを MovieClip 化する

----

開始
><center><img src="images/as1-2.jpg" width="540" height="421"></center><

----

終了
><center><img src="images/as1-3.jpg" width="540" height="421"></center><

----

細かい Tips
<span class="small">１フレーム目はアニメーション終了時のサイズ</span>
><center><img src="images/as1-1.jpg" width="540" height="381"></center><

----

-1フレーム目の AS：
>|
gotoAndPlay("start");
|<

-17フレーム目の AS：
>|
stop();
|<

----

メインステージに MC を配置
><center><img src="images/as1-4.jpg" width="683" height="401"></center><

<span class="small">先ほどの Tips はここで配置しやすくするため</span>

----

-各 MC に AS を追加
>||
onClipEvent(load){
    this.letter.dynamic_text.text = "キ";
}
||<

<span class="small">letter はテキストを格納した MC。<br>dynamic_text は letter の中の<br>ダイナミックテキスト本体。</span>

----

さっきと同じ見た目になる
<span class="small">(注意：フォントの埋め込みは忘れずに)</span>

----

面白くするために<br>エフェクトを追加
><center><img src="images/as2-1.jpg" width="538" height="356"></center><

----

どうだ！
><center><flash src="images/asnize1.swf" width="550" height="200"></center><

----

MC の途中に stop() をいれて
ステージから一斉再生するようにしてみた。
>||
for(var i = 0; i < 8; i++)
{
    eval("this.l" + i).play();
}
||<

----

いっせいにシュパッ
><center><flash src="images/asnize2.swf" width="550" height="200"></center><

----

エフェクトの変更は<br>簡単にできるようになった！

----

でも…

----

-文字を「大安売り」に変えてよ

----

-文字が現れるタイミングを変えてよ

----

と言わたら、<br>ちょっとめんどくさい。

----

汎用化してみる。

----

***方法３：オール AS 化

----

ステージはからっぽ
><center><img src="images/as4.jpg" width="600" height="468"></center><

----

AS が頑張る。
>|
var text:String = "キャンペーン中";
var size = 60;

for(var i = 0; i < text.length; i++)
{
    <span class="comment">// 第一引数の idName は「文字アニメ(AS書き出し)」</span>
    <span class="comment">// のリンゲージプロパティで指定したもの</span>
    var mc:MovieClip = this.attachMovie("moji_animation", 
        "l" + i, i, {_x : i * size});
    mc.letter.dynamic_text.text = text.charAt(i);
    mc.stop();

    mc.onEnterFrame = enterFrameHandler(i);
}
|<

----

-moji_animation を文字数分だけ配置
-moji_animation の１フレーム目は空にしておく

----

enterFrameHandler関数
>||
// i 番目の文字の onEnterFrame を返す
function enterFrameHandler(i) 
{
    var count = 0;
    return function()
    {
        if(count % 4 == 0 && count / 4 == i)
        {
            this.play();
            this.onEnterFrame = null;
        }
        count++;
    }
}
||<

----

-i 番目の文字は i*4 フレームになったら play()
-countでフレーム数を記録<br><span class="small">(クロージャ使用)</span>

----

完全AS化！

なんかカッコイイ！？

----

でも、でも、でも…

----

位置調整が大変

----

数字を変えてはパブリッシュ、<br>そして確認

----

試行錯誤、試行錯誤、<br>試行錯誤、試行錯誤、<br>
試行錯誤、試行錯誤、<br>試行錯誤、試行錯誤、<br>
試行錯誤、試行錯誤、<br>試行錯誤、試行錯誤。<br>

----

なるべくなら試行錯誤の回数を減らしたい

----

そこで

----

**方法４
タイムライン＋ActionScript のいいとこどり

----

文字はステージ上に配置する
><center><img src="images/as5.jpg" width="600" height="468"></center><

----
AS でアニメーション化
>|
var mc_list:Array = <strong>convertTextToMovieClip</strong>(my_text, 
    "moji_animation", "letter.dynamic_text");
for(var i = 0; i &lt; mc_list.length; i++)
{
    mc_list[i].stop();
    mc_list[i].onEnterFrame = enterFrameHandler(i);
}

function enterFrameHandler(i)
{
    // 先ほどと同じ
}
|<

----

convertTextToMovieClip
>||
function convertTextToMovieClip(tf:TextField, mc_id:String, txt_path:String):Array
{
    var ret:Array = [];

    // save tf data
    var str:String = tf.text;
    var prop:Object = {_alpha : tf._alpha, _x : tf._x, _y : tf._y, _xscale : tf._xscale, _yscale : tf._yscale, _rotation : tf._rotation};
    var fmts:Array = []
    for(var i = 0; i < str.length; i++)
    {
        fmts.push(tf.getNewTextFormat());
    }

    // replace tf
    var parent:MovieClip = tf._parent;
    var id:String = (new Date()).getTime() + tf._name + Math.random();
    var box:MovieClip = parent.createEmptyMovieClip(tf._name, tf.getDepth());
    
    // apply tf's prop
    for(var id in prop)
    {
        if(typeof id == "string")
        {
            box[id] = prop[id];
        }
    }

    // create TextField in box
    var x:Number = 0;
    for(var i = 0; i < str.length; i++)
    {
        var mc:MovieClip = box.attachMovie(mc_id, id + "_" + i, i);
        if(!mc)
        {
            trace("mc(" + mc_id + ") does not exist.");
            return ret;
        }
        
        var dynamic_text:TextField = eval("mc." + txt_path);
        if(!dynamic_text)
        {
            trace("text field(" + txt_path + ") cannot be found.");
            return ret;
        }
        var size:Number = dynamic_text.getTextFormat().size;

        // apply format
        dynamic_text.text = str.charAt(i);
        dynamic_text.setTextFormat(fmts[i]);

        // centering
        var txtfmt:TextFormat = new TextFormat();
        txtfmt.align = "center";
        dynamic_text.setTextFormat(txtfmt);

        // ajust position (centering)
        mc._x = x - (mc._width - dynamic_text.textWidth) / 2;
        if(x == 0)
        {
            x -= mc._x;
            mc._x = 0;
        }

        x += dynamic_text.textWidth;
        ret.push(mc);
    }
    
    return ret;
}
||<
----

長いので概要だけ
+テキストフィールドを空のMCで置換
+各文字のアニメーション用MCを位置を計算して設置
+文字列、フォーマット設定

----

位置調整や色の調整、サイズ調整がステージ上でできる。

----

***応用例
><center><img src="images/final.jpg" width="600" height="418"></center><
<span class="small">タイムラインに文字を配置</span>

----

各文字が始まるフレームに、<br>この AS を書くだけで...
>||
var mc_list:Array = convertTextToMovieClip(my_text, 
    "moji_animation", "letter.dynamic_text");
for(var i = 0; i < mc_list.length; i++)
{
    mc_list[i].stop();
    mc_list[i].onEnterFrame = enterFrameHandler(i);
}
||<

----

こうなる。
><center><flash src="images/final.swf" width="550" height="200"></center><

----

FuseKit や Tweener と<br>組み合わせるのもよさげ。

----

**質問

----

どれ使ってます？
-方法１：力任せ
-方法２：エフェクトのMC化
-方法３：オール AS 化
-方法４：タイムライン＋ActionScript のいいとこどり

----

><span style="position:relative; font-size:1.5em; top:-.1em; left:.5em">オ</span>
<span  style="position:relative; font-size:1.5em; top:.2em; left:0em">ワ</span>
<span  style="position:relative; font-size:1.5em; top:-.2em; left:-.5em">リ</span></div><

]]>
</slide>
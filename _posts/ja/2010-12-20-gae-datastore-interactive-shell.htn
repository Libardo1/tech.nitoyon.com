---
layout: post
title: Google App Engine で Datastore を Python 対話シェルから参照する
tags: Python
lang: ja
old_url: http://d.hatena.ne.jp/nitoyon/20101220/gae_datastore_interactive_shell
---
いまさらながらに Google App Engine をちょろちょろと触っている。

Datastore を対話シェルから使えると便利そうなので、やり方を確立してみた。

結論としては次のコードを対話シェル上で実行すれば使えるようになった。(Google App Engine SDK for Python Windows 版 1.4.0 にて確認)
>|python|
import os
import sys
import tempfile

DIR_PATH = r"C:\Program Files\Google\google_appengine"
APP_ID = "helloworld"

sys.path += [
  DIR_PATH,
  os.path.join(DIR_PATH, 'lib', 'antlr3'),
  os.path.join(DIR_PATH, 'lib', 'django'),
  os.path.join(DIR_PATH, 'lib', 'fancy_urllib'),
  os.path.join(DIR_PATH, 'lib', 'ipaddr'),
  os.path.join(DIR_PATH, 'lib', 'webob'),
  os.path.join(DIR_PATH, 'lib', 'yaml', 'lib'),
]
from google.appengine.api import apiproxy_stub_map,datastore_file_stub

os.environ['APPLICATION_ID'] = APP_ID

datastore_path = os.path.join(tempfile.gettempdir(), 'dev_appserver.datastore')
apiproxy_stub_map.apiproxy = apiproxy_stub_map.APIProxyStubMap()
datastore = datastore_file_stub.DatastoreFileStub(APP_ID, datastore_path)
apiproxy_stub_map.apiproxy.RegisterStub('datastore_v3', datastore)
||<
Windows 版以外でも、<code>DIR_PATH</code> のところをインストール先のパスに変更すれば動くと思う。<code>APP_ID</code> は <code>helloworld</code> にしているが、自分のアプリケーションの ID に変えると、ローカルでテスト中のデータを読み取れる。

こんな感じに試せて嬉しい。
>|python|
>>> from google.appengine.ext import db
>>> class A(db.Model):
...     t = db.StringProperty()
...
>>> a = A()
>>> a.t = 'test'
>>> a.put()
datastore_types.Key.from_path(u'A', 1L, _app=u'helloworld')
>>> a.key().id()
1L
>>> a.t
'test'
>>> A.all().count()
1
||<
Web から使う DB と同じものを参照しているので、Web で設定した内容をインタラクティブ シェル上で確認することもできて嬉しい。

**スクリプトを作るまで
====
何も考えずにスクリプト パスを通して DataStore の API を叩いてみると次の例外が発生した。
>|
google.appengine.api.datastore_errors.BadArgumentError: app must not be empty.
|<

datastore_types.py にて次のようにして APPLICATION_ID を参照していたので、
>|python|
def ResolveAppId(app):
  """Validate app id, providing a default.
  (snip)
  """
  if app is None:
    app = os.environ.get('APPLICATION_ID', '')
  ValidateString(app, 'app', datastore_errors.BadArgumentError)
  return app
||<
MS-DOS 上で環境変数 APPLICATION_ID を設定してやった。
>|
set APPLICATION_ID=test
|<

すると、次のようなエラーが。
>|
AssertionError: No api proxy found for service "datastore_v3"
|<
このへんで諦めつつ検索したら、[http://tech.einaregilsson.com/2010/10/11/unit-testing-model-classes-in-google-app-engine/:title=Unit testing model classes in Google App Engine] に単体テストの手順があったのでソースを奪ってきた。

ここのソースでは DatastoreFileStub に <code>'/dev/null'</code> を渡していて、一時的な DataStore を作成していた。(<code>'/dev/null'</code> と聞くと Windows では動かなさそうに見えたが、App Engine SDK で <code>'/dev/null'</code> のときは特別扱いしていたので関係ない)

今回は Web 側のデータを読み込みたかったので、SDK のソースを辿っていたら、<code>tools\dev_appserver_main.py</code> に DataStore として
>|python|
os.path.join(tempfile.gettempdir(),
             'dev_appserver.datastore'),
||<
が利用されてることが分かったので、この値を利用するようにしてみた。

><div class="seealso"><
**関連エントリ
-[http://d.hatena.ne.jp/nitoyon/20101230/gae_interactive_console_shortcut:title=Google App Engine の Interactive Console で Ctrl-Enter で実行させる]
></div><

